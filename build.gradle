plugins {
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    // id 'org.gradle.toolchains.foojay-resolver-convention' version '0.5.0'
}

apply plugin: 'idea'

version = mod_version
group = mod_packagename
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
//    mappings channel: 'official', version: mod_minecraft_version
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }

     flatDir {
         dir 'libs'
     }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    runtimeOnly fg.deobf("curse.maven:pipez-443900:4713656")
    runtimeOnly fg.deobf("curse.maven:refined-storage-${refinedstorage_mod_id}:4844585")
    runtimeOnly fg.deobf("curse.maven:mekanism-${mekanism_mod_id}:4866575")

    // runtimeOnly fg.deobf("curse.maven:applied-energistics2-223794:4857895")

    // runtimeOnly fg.deobf("curse.maven:cofh-core-69162:4801049")
    // runtimeOnly fg.deobf("curse.maven:thermal-dynamics-227443:4760633")
    // runtimeOnly fg.deobf("curse.maven:thermal-foundation-222880:4782926")
    runtimeOnly fg.deobf("curse.maven:pretty-pipes-376737:4769646")
    runtimeOnly fg.deobf("curse.maven:jei-238222:4712868")
    runtimeOnly fg.deobf("curse.maven:mcjtylib-233105:4747680")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : mod_vendor,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : mod_name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : mod_vendor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_version: mod_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
